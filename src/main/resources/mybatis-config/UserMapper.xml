<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cobble.takeaway.dao.UserMapper" >
	<!-- <cache type="org.mybatis.caches.memcached.LoggingMemcachedCache" /> -->
	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache">
		<property name="timeToIdleSeconds" value="3600" />
		<property name="timeToLiveSeconds" value="3600" />
		<property name="maxEntriesLocalHeap" value="1000" />
		<property name="maxEntriesLocalDisk" value="10000000" />
		<property name="memoryStoreEvictionPolicy" value="LRU" />
	</cache> -->
	
  <!-- <resultMap id="RelWxIndexMapResultMap" type="RelWxIndexMapPOJO" >
    <id column="REL_WX_INDEX_MAP_ID" property="relWxIndexMapId"/>
    <result column="USER_ID" property="userId"/>
    <result column="WX_INDEX_CODE" property="wxIndexCode"/>
  </resultMap> -->
  
  
  <resultMap id="UserResultMap" type="com.cobble.takeaway.pojo.UserPOJO" >
    <id column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="USERNAME" property="username" jdbcType="VARCHAR" />
    <result column="NICKNAME" property="nickname" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="ENABLE" property="enable"/>
    <result column="USER_TYPE" property="userType" jdbcType="VARCHAR" />
    
    <association property="relWxIndexMapPOJO" resultMap="com.cobble.takeaway.dao.WxTemplateMapper.RelWxIndexMapResultMap"></association>
    
    <collection property="rolePOJOs" column="USER_ID" select="com.cobble.takeaway.dao.RoleMapper.findByUserId"></collection>
    
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    u.USER_ID, u.USERNAME, u.NICKNAME, u.PASSWORD, u.EMAIL, u.ENABLE, u.USER_TYPE
  </sql>
  <sql id="Clause_Common">
	<if test="username != null and username != ''">
		and u.USERNAME like concat("%", concat(#{username}, "%"))
	</if>
	<if test="userType != null and userType != ''">
		and u.USER_TYPE = #{userType}
	</if>
  </sql>
  
  <select id="findUserByActivityId" resultMap="UserResultMap" parameterType="java.lang.Long" >
    select
      distinct
    <include refid="Base_Column_List" />
    from b_user u, rel_activity_user b, e_activity c
    where 
    u.user_id = b.user_id
    and b.activity_id = c.activity_id
    and c.activity_id = #{activityId}
  </select>
  
  <select id="findUserByIndexCode" resultMap="UserResultMap" parameterType="String" >
    select
      distinct
    <include refid="Base_Column_List" />
    , b.REL_WX_INDEX_MAP_ID, b.USER_ID, b.WX_TEMPLATE_ID, b.WX_STATIC_PAGE, b.wx_index_code
    from b_user u, rel_wx_index_map b
    where 
    u.user_id = b.user_id
    and b.wx_index_code = #{wxIndexCode}
  </select>
  
  <select id="findUserByName" resultMap="UserResultMap" parameterType="String" >
    select
      distinct
    <include refid="Base_Column_List" />
    from b_user u
    where u.USERNAME = #{username}
  </select>
  <select id="findUserByNickname" resultMap="UserResultMap" parameterType="String" >
    select
      distinct
    <include refid="Base_Column_List" />
    from b_user u
    where u.NICKNAME = #{nickname}
  </select>
  <select id="finds" resultMap="UserResultMap" parameterType="com.cobble.takeaway.pojo.UserSearchPOJO" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_user u
    <where>
  		<trim prefixOverrides="and">
			<include refid="Clause_Common"/>
  		</trim>
  	</where>
    order by USERNAME
	<if test="start > -1 and limit > 0">
		limit #{start}, #{limit}
	</if>
  </select>
  
  <select id="getCount" parameterType="com.cobble.takeaway.pojo.UserSearchPOJO" resultType="java.lang.Integer" >
    select count(1) from b_user u
    <where>
  		<trim prefixOverrides="and">
			<include refid="Clause_Common"/>
  		</trim>
  	</where>
  </select>
  <select id="findById" resultMap="UserResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_user u
    where USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from b_user
    where USER_ID = #{userId,jdbcType=INTEGER};
    delete from rel_user_role
    where USER_ID = #{userId,jdbcType=INTEGER};
  </delete>
  <insert id="insert" parameterType="com.cobble.takeaway.pojo.UserPOJO" useGeneratedKeys="true" keyColumn="USER_ID" keyProperty="userId">
    insert into b_user (USERNAME, NICKNAME, 
      PASSWORD, EMAIL, ENABLE, USER_TYPE)
    values (#{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password}, #{email}, #{enable}, #{userType})
  </insert>
  <update id="update" parameterType="com.cobble.takeaway.pojo.UserPOJO" >
    update b_user
    set USERNAME = #{username,jdbcType=VARCHAR},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      PASSWORD = #{password},
      EMAIL = #{email},
      ENABLE = #{enable},
      USER_TYPE = #{userType}
    where USER_ID = #{userId,jdbcType=INTEGER};
    
    delete from rel_user_role where USER_ID = #{userId};
    
    <foreach collection="roleId" item="item">
    insert into rel_user_role (ROLE_ID, USER_ID)
    values (#{item}, #{userId});
    </foreach>
  </update>
  
  <update id="updateInfo" parameterType="com.cobble.takeaway.pojo.UserPOJO" >
    update b_user
    <set>
    	<if test="username != null">USERNAME = #{username},</if>
    	<if test="nickname != null">NICKNAME = #{nickname},</if>
    	<if test="email != null">EMAIL = #{email},</if>
    	<if test="enable != null">ENABLE = #{enable},</if>
    	<if test="userType != null">USER_TYPE = #{userType}</if>
    </set>
    where USER_ID = #{userId,jdbcType=INTEGER};
  </update>
  <update id="updatePassword" parameterType="com.cobble.takeaway.pojo.UserPOJO" >
    update b_user
    set PASSWORD = #{password}
    where USER_ID = #{userId,jdbcType=INTEGER};
  </update>
</mapper>