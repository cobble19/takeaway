<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cobble.takeaway.dao.FoodSellerMapper" >
	<!-- <cache type="org.mybatis.caches.memcached.LoggingMemcachedCache" /> -->
  <resultMap id="FoodSellerResultMap" type="com.cobble.takeaway.pojo.FoodSellerPOJO" >
    <id column="FOOD_SELLER_ID" property="foodSellerId" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    
    <association property="locationBusinessPOJO" columnPrefix="LB_"
    	resultMap="com.cobble.takeaway.dao.LocationBusinessMapper.LocationBusinessResultMap"></association>
    <association property="locationAreaPOJO" columnPrefix="LA_"
    	resultMap="com.cobble.takeaway.dao.LocationAreaMapper.LocationAreaResultMap"></association>	
    
    <!-- <collection property="locationBusinessPOJOs" 
    	resultMap="com.cobble.takeaway.dao.LocationBusinessMapper.LocationBusinessResultMap" columnPrefix="LB_"
    	column="FOOD_SELLER_ID"></collection>
    <collection property="locationAreaPOJOs"
    	resultMap="com.cobble.takeaway.dao.LocationAreaMapper.LocationAreaResultMap" columnPrefix="LA_"
    	column="FOOD_SELLER_ID"></collection> -->
  </resultMap>
  <sql id="Base_Column_List" >
    fs.FOOD_SELLER_ID, fs.NAME, fs.PHONE
  </sql>
  <sql id="Clause_Common">
	<if test="name != null and name != ''">
		and fs.NAME like concat("%", concat(#{name}, "%"))
	</if>
  </sql>
  <select id="finds" resultMap="FoodSellerResultMap" parameterType="com.cobble.takeaway.pojo.FoodSellerPOJO" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    , lb.LOCATION_BUSINESS_ID as LB_LOCATION_BUSINESS_ID, lb.NAME as LB_NAME, lb.DESCRIPTION as LB_DESCRIPTION
    , la.LOCATION_AREA_ID as LA_LOCATION_AREA_ID, la.NAME as LA_NAME, la.DESCRIPTION as LA_DESCRIPTION
    from food_seller fs
    left join rel_business_seller rbs on rbs.FOOD_SELLER_ID = fs.FOOD_SELLER_ID
    left join location_business lb on lb.LOCATION_BUSINESS_ID = rbs.LOCATION_BUSINESS_ID
    left join rel_area_seller ras on ras.FOOD_SELLER_ID = fs.FOOD_SELLER_ID
    left join location_area la on la.LOCATION_AREA_ID = ras.LOCATION_AREA_ID
    <where>
  		<trim prefixOverrides="and">
			<include refid="Clause_Common"/>
  		</trim>
  	</where>
	<if test="start > -1 and limit > 0">
		limit #{start}, #{limit}
	</if>
  </select>
  <select id="getCount" parameterType="com.cobble.takeaway.pojo.FoodSellerPOJO" resultType="java.lang.Integer" >
    select count(1) from food_seller
    <where>
  		<trim prefixOverrides="and">
			<include refid="Clause_Common"/>
  		</trim>
  	</where>
  </select>
  <select id="findById" resultMap="FoodSellerResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from food_seller
    where FOOD_SELLER_ID = #{foodSellerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from food_seller
    where FOOD_SELLER_ID = #{foodSellerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cobble.takeaway.pojo.FoodSellerPOJO">
  	<selectKey keyProperty="foodSellerId" resultType="int" order="BEFORE">
         SELECT LAST_INSERT_ID()
     </selectKey>
    insert into food_seller
    <trim prefix="(" suffix=")" suffixOverrides="," >
    	<if test="foodSellerId != null" >
        FOOD_SELLER_ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="foodSellerId != null" >
        #{foodSellerId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
    
  </insert>
  
  <insert id="insertRelBusinessSeller" keyProperty="relBusinessSellerId" parameterType="com.cobble.takeaway.pojo.RelBusinessSellerPOJO" useGeneratedKeys="true">
    insert into rel_business_seller
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="locationBusinessId != null" >
        LOCATION_BUSINESS_ID,
      </if>
      <if test="foodSellerId != null" >
        FOOD_SELLER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
    	<if test="locationBusinessId != null" >
        #{locationBusinessId,jdbcType=VARCHAR},
      </if>
      <if test="foodSellerId != null" >
        #{foodSellerId,jdbcType=VARCHAR},
      </if>
    </trim>
    
  </insert>
  
  <insert id="insertRelAreaSeller" keyProperty="relAreaSellerId" parameterType="com.cobble.takeaway.pojo.RelAreaSellerPOJO" useGeneratedKeys="true">
    insert into rel_area_seller
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="locationAreaId != null" >
        LOCATION_AREA_ID,
      </if>
      <if test="foodSellerId != null" >
        FOOD_SELLER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
    	<if test="locationAreaId != null" >
        #{locationAreaId},
      </if>
      <if test="foodSellerId != null" >
        #{foodSellerId},
      </if>
    </trim>
    
  </insert>
  
  <update id="update" parameterType="com.cobble.takeaway.pojo.FoodSellerPOJO" >
    update food_seller
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where FOOD_SELLER_ID = #{foodSellerId,jdbcType=INTEGER}
  </update>
</mapper>