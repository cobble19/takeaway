<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cobble.takeaway.dao.PrivilegeMapper" >
	<!-- <cache type="org.mybatis.caches.memcached.LoggingMemcachedCache" /> -->
	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache">
		<property name="timeToIdleSeconds" value="3600" />
		<property name="timeToLiveSeconds" value="3600" />
		<property name="maxEntriesLocalHeap" value="1000" />
		<property name="maxEntriesLocalDisk" value="10000000" />
		<property name="memoryStoreEvictionPolicy" value="LRU" />
	</cache> -->
	
  <resultMap id="PrivilegeResultMap" type="com.cobble.takeaway.pojo.PrivilegePOJO" >
    <id column="PRIVILEGE_ID" property="privilegeId" jdbcType="INTEGER" />
    <result column="PRIVILEGE_NAME" property="privilegeName" jdbcType="VARCHAR" />
    <result column="URL" property="url" jdbcType="VARCHAR" />
    
    <collection property="rolePOJOs" column="PRIVILEGE_ID" select="com.cobble.takeaway.dao.RoleMapper.findByPrivilegeId"></collection>
  </resultMap>
  	
  <resultMap id="PrivilegeOnlyResultMap" type="com.cobble.takeaway.pojo.PrivilegePOJO" >
    <id column="PRIVILEGE_ID" property="privilegeId" jdbcType="INTEGER" />
    <result column="PRIVILEGE_NAME" property="privilegeName" jdbcType="VARCHAR" />
    <result column="URL" property="url" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    p.PRIVILEGE_ID, p.PRIVILEGE_NAME, p.URL
  </sql>
  <sql id="Clause_Common">
	<if test="privilegeName != null and privilegeName != ''">
		and p.PRIVILEGE_NAME like concat("%", concat(#{privilegeName}, "%"))
	</if>
  </sql>
  <select id="findAll" resultMap="PrivilegeOnlyResultMap">
  	select 
  	distinct 
    <include refid="Base_Column_List" />
    from b_privilege p
  </select>
  <select id="findByRoleId" resultMap="PrivilegeOnlyResultMap" parameterType="int" >
    select
      distinct
    <include refid="Base_Column_List" />
    from b_privilege p
    join rel_privilege_role rpr on rpr.PRIVILEGE_ID = p.PRIVILEGE_ID
    join b_role r on r.ROLE_ID = rpr.ROLE_ID
    <where>
  		<trim prefixOverrides="and">
			and r.ROLE_ID = #{roleId}
  		</trim>
  	</where>
  </select>
  <select id="finds" resultMap="PrivilegeResultMap" parameterType="com.cobble.takeaway.pojo.PrivilegeSearchPOJO" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_privilege p
    <where>
  		<trim prefixOverrides="and">
			<include refid="Clause_Common"/>
  		</trim>
  	</where>
    order by PRIVILEGE_NAME
	<if test="start > -1 and limit > 0">
		limit #{start}, #{limit}
	</if>
  </select>
  
  <select id="getCount" parameterType="com.cobble.takeaway.pojo.PrivilegeSearchPOJO" resultType="java.lang.Integer" >
    select count(1) from b_privilege p
    <where>
  		<trim prefixOverrides="and">
			<include refid="Clause_Common"/>
  		</trim>
  	</where>
  </select>
  <select id="findById" resultMap="PrivilegeResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_privilege p
    where PRIVILEGE_ID = #{privilegeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from b_privilege
    where PRIVILEGE_ID = #{privilegeId,jdbcType=INTEGER};
    delete from rel_privilege_role
    where PRIVILEGE_ID = #{privilegeId};
  </delete>
  <insert id="insert" parameterType="com.cobble.takeaway.pojo.PrivilegePOJO" useGeneratedKeys="true"
  	keyColumn="PRIVILEGE_ID" keyProperty="privilegeId">
    insert into b_privilege (PRIVILEGE_NAME, URL)
    values (#{privilegeName}, #{url,jdbcType=VARCHAR})
  </insert>
  <update id="update" parameterType="com.cobble.takeaway.pojo.PrivilegePOJO" >
    update b_privilege
    set PRIVILEGE_NAME = #{privilegeName,jdbcType=INTEGER},
      URL = #{url,jdbcType=VARCHAR}
    where PRIVILEGE_ID = #{privilegeId,jdbcType=INTEGER};
    
    delete from rel_privilege_role where PRIVILEGE_ID = #{privilegeId};
    
    <foreach collection="roleId" item="item">
    insert into rel_privilege_role (ROLE_ID, PRIVILEGE_ID)
    values (#{item}, #{privilegeId});
    </foreach>
  </update>
</mapper>

