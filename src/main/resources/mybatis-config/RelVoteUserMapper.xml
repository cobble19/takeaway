<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cobble.takeaway.dao.RelVoteUserMapper" >
	<!-- <cache type="org.mybatis.caches.memcached.LoggingMemcachedCache" /> -->
	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache">
		<property name="timeToIdleSeconds" value="3600" />
		<property name="timeToLiveSeconds" value="3600" />
		<property name="maxEntriesLocalHeap" value="1000" />
		<property name="maxEntriesLocalDisk" value="10000000" />
		<property name="memoryStoreEvictionPolicy" value="LRU" />
	</cache> -->
	
  <resultMap id="RelVoteUserResultMap" type="com.cobble.takeaway.pojo.RelVoteUserPOJO" >
    <id column="REL_VOTE_USER_ID" property="relVoteUserId" />
    <result column="VOTE_ID" property="voteId" />
    <result column="VOTE_ITEM_ID" property="voteItemId"/>
    <result column="USER_ID" property="userId"/>
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    a.REL_VOTE_USER_ID, a.VOTE_ID, a.VOTE_ITEM_ID, a.USER_ID
  </sql>
  <sql id="Clause_Common">
	<if test="voteId != null">
		and VOTE_ID = #{voteId}
	</if>
	<if test="voteItemId != null">
		and VOTE_ITEM_ID = #{voteItemId}
	</if>
	<if test="userId != null">
		and USER_ID = #{userId}
	</if>
  </sql>
  
  <select id="finds" resultMap="RelVoteUserResultMap" parameterType="com.cobble.takeaway.pojo.RelVoteUserSearchPOJO" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rel_vote_user a
    <where>
  		<trim prefixOverrides="and">
			<include refid="Clause_Common"/>
  		</trim>
  	</where>
	<if test="start > -1 and limit > 0">
		limit #{start}, #{limit}
	</if>
  </select>
  <select id="getCount" parameterType="com.cobble.takeaway.pojo.RelVoteUserSearchPOJO" resultType="java.lang.Integer" >
    select count(1) from rel_vote_user
    <where>
  		<trim prefixOverrides="and">
			<include refid="Clause_Common"/>
  		</trim>
  	</where>
  </select>
  
  <select id="findById" resultMap="RelVoteUserResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from rel_vote_user a
    <where>
  		<trim prefixOverrides="and">
			and a.REL_VOTE_USER_ID = #{relVoteUserId}
  		</trim>
  	</where>
  </select>
  
  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from rel_vote_user
    where REL_VOTE_USER_ID = #{relVoteUserId}
  </delete>
  <insert id="insert" parameterType="com.cobble.takeaway.pojo.RelVoteUserPOJO" useGeneratedKeys="true"
  	keyProperty="relVoteUserId" keyColumn="REL_VOTE_USER_ID">
    insert into rel_vote_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="voteId != null" >
        VOTE_ID,
      </if>
      <if test="voteItemId != null" >
        VOTE_ITEM_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="voteId != null" >
        #{voteId},
      </if>
      <if test="voteItemId != null" >
        #{voteItemId},
      </if>
      <if test="userId != null" >
        #{userId},
      </if>
    </trim>
  </insert>
  
  <update id="update" parameterType="com.cobble.takeaway.pojo.RelVoteUserPOJO" >
    update rel_vote_user
    <set>
      <if test="voteId != null" >
        VOTE_ID = #{voteId},
      </if>
      <if test="voteItemId != null" >
        VOTE_ITEM_ID = #{voteItemId},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId},
      </if>
    </set>
    where REL_VOTE_USER_ID = #{relVoteUserId}
  </update>
</mapper>